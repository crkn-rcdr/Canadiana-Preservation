#!/usr/bin/env perl

use strict;
use warnings;

use FindBin;
use lib "$FindBin::RealBin/../lib";
use Getopt::Long;
use Config::General;
use CIHM::Swift::Client;
use Data::Dumper;


my $conf = "/etc/canadiana/tdr/tdr.conf";
GetOptions (
    'conf:s' => \$conf,
    );

my %confighash = new Config::General(
    -ConfigFile => $conf,
    )->getall;

my $swift;
my $swiftconfig;
# Undefined if no <swift> config block
if(exists $confighash{swift}) {
    my %swiftopt = (
	furl_options => { timeout => 120 }
	);
    foreach ("server","user","password","account", "furl_options") {
	if (exists  $confighash{swift}{$_}) {
	    $swiftopt{$_}=$confighash{swift}{$_};
	}
    }
    $swift=CIHM::Swift::Client->new(%swiftopt);
    $swiftconfig=$confighash{swift};
} else {
    die "No <swift> configuration block in $conf\n";
}
my $container=$swiftconfig->{repoanalysis};


# Need to loop multiple times as Swift has a maximum of
# 10,000 names.
my @zipfiles;
my %folders;
my $more=1;
my %containeropt = (
    delimiter => "/"
    );
while ($more) {
    print "Container get: ".((exists $containeropt{'marker'})?$containeropt{'marker'} : "Start" ) ."\n";
    my $resp = $swift->container_get($container,
                                                      \%containeropt);
    if ($resp->code == 403) {
	warn "delimiter container_get($container) returned ". $resp->code . " - " . $resp->message. "\n";
	$resp = $swift->container_get($container,
                                                      \%containeropt);
    }
    if ($resp->code != 200) {
	die "delimiter container_get($container) returned ". $resp->code . " - " . $resp->message. "\n";
    };
    $more=scalar(@{$resp->content});
    if ($more) {
	foreach my $object (@{$resp->content}) {
	    if (exists $object->{subdir}) {
		$folders{$object->{subdir}}=1;
		$containeropt{'marker'}=$object->{subdir};
	    } elsif (exists $object->{name}) {
		push @zipfiles, $object->{name};
		$containeropt{'marker'}=$object->{name};
	    } else {
		warn "Object without name or subdir? ".Dumper($object);
	    }
	}
    }
}

foreach my $file (@zipfiles) {
    if ($file =~ /\.zip$/ ) {
	my $folder = substr($file,0,-4)."/";
	if (exists $folders{$folder}) {
	    deletefolder($folder);
	}
    } else {
	print "$file isn't a zip file.\n";
    }
}



sub deletefolder {
    my ($folder) = @_;

    print "Deleting $folder\n";

    my %containeropt = (
	"prefix" => $folder
	);

    
    my @filelist;

    # Need to loop possibly multiple times as Swift has a maximum of
    # 10,000 names.
    my $more=1;
    while ($more) {
        my $resp = $swift->container_get($container, \%containeropt);
	if ($resp->code == 403) {
	    warn "prefix container_get($container) for $folder returned ". $resp->code . " - " . $resp->message. "\n";
	    $resp = $swift->container_get($container, \%containeropt);
	}
	if ($resp->code != 200) {
	    die "prefix container_get($container) for $folder returned ". $resp->code . " - " . $resp->message. "\n";
	};
	$more=scalar(@{$resp->content});
	if ($more) {
	    $containeropt{'marker'}=$resp->content->[$more-1]->{name};

	    foreach my $object (@{$resp->content}) {
		push @filelist, $object->{name};
	    }
	}
    }

    foreach my $delfile (@filelist) {
	my $delresp =
	    $swift->object_delete($container,$delfile);
	if ($delresp->code != 204) {
	    die "object_delete of $delfile returned ".$delresp->code . " - " . $delresp->message."\n";
	}
    }
}

